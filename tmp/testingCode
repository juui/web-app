    // for (let keyConcept in concepts) {
    //   let index = 0;
    //   for (let component of concepts[keyConcept].components) {
    //     this._concepts[component].animate({'opacity': 1}, 5000 * index + 5000, mina.easeinout, ()=>{
    //       console.log('finish', 5000 * index + 5000);
    //     });
    //   }
    //   ++index;
    //
    // }

    //this._concepts['internalCircle'].animate({'opacity': 1}, 2500, mina.easeinout);

        for (let keyConcept in this._concepts) {

          for (let animation of this._animations[keyConcept]) {
            if (animation) {
              animation.stop();
            }
          }

        }

        this._animations = {};


          _animateCenter() {
            for (let component of concepts['center'].components) {
              this._concepts[component].animate({'opacity': 1}, 5000, mina.easeinout, ()=>{
                console.log('finish', 'center');
              });
            }
          }


        for (let keyConcept in this._concepts) {
          let concept = this._concepts[keyConcept];
          let components = this._concepts[keyConcept].components;
          for (let component of components) {
            let element = document.getElementById(component);
            if (element) {
              concept.elements.push(element);
              concept.sequences.push(
                {
                  e: element, p: {opacity: 1}, o: {duration: 5000, sequenceQueue: false}
                });
              Velocity(element, {opacity: 0});
            }
          }
        }


                      for (let keyConcept in this._concepts) {

                        let sequences = this._concepts[keyConcept].sequences;
                        let elements = this._concepts[keyConcept].elements;

                        Velocity(elements, 'stop');
                        Velocity(elements, {opacity: 0});

                        //for (let element of elements) {
                        //}

                        //Velocity.RunSequence(sequences);

                      }

                    }